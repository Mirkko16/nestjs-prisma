generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int              @id @default(autoincrement())
  name        String?          @unique
  email       String           @unique
  password    String
  roles       UserRole[]       @relation("UserRoles")
  permissions UserPermission[] @relation("UserPermissions")
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  permissions RolePermission[] @relation("RolePermissions")
  users       UserRole[]       @relation("RoleUserRoles")
}

model UserRole {
  userId Int
  roleId Int
  user   User @relation("UserRoles", fields: [userId], references: [id], onDelete: Cascade)
  role   Role @relation("RoleUserRoles", fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

model UserPermission {
  userId       Int
  permissionId Int
  user         User       @relation("UserPermissions", fields: [userId], references: [id], onDelete: Cascade)
  permission   Permission @relation("UserPermissionRelation", fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([userId, permissionId])
}

model Permission {
  id    Int              @id @default(autoincrement())
  name  String           @unique
  users UserPermission[] @relation("UserPermissionRelation")
  roles RolePermission[] @relation("PermissionRoles")
}

model RolePermission {
  roleId       Int
  permissionId Int
  role         Role       @relation("RolePermissions", fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation("PermissionRoles", fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}
